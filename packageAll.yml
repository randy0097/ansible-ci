---
- name: build all
  hosts: localhost
  tasks:
  # - name: copy appMarket to backend
  #   copy: src={{frontend_dir}}/appMarket/dist/ dest={{backend_build_dir}}
  # - name: copy personalConsole to backend
  #   copy: src={{frontend_dir}}/personalConsole/dist/ dest={{backend_build_dir}}    
  # - name: copy internalOperation to backend
  #   copy: src={{frontend_dir}}/internalOperation/dist/ dest={{backend_build_dir}}
  # - name: copy enterpriseOperation to backend
  #   copy: src={{frontend_dir}}/enterpriseOperation/dist/ dest={{backend_build_dir}}  
  - name: copy enterpriseOperation to backend
    copy: src={{frontend_dir}}/{{item.key}}/dist/ dest={{backend_build_dir}}
    with_dict: "{{ appNameToFolderName }}"  
  - name: build backend war
    shell: chdir={{backend_build_dir}} jar -cvfM ../{{backend_war_name}} *
- name: copy war to deploy server
  hosts: "{{env}}"
  tasks:
  - name: clean old remote war
    command: rm {{remote_temp}}/{{backend_war_name}}  
  - name: copy war to remote
    copy: src={{backend_target_dir}}/{{backend_war_name}}
          dest={{remote_temp}}/{{backend_war_name}}
  - name: get tomcat processId
    raw: ps aux|grep {{tomcat_process_keyword}}|grep -v grep|awk '{print $2}'
    register: tomcatProcess
    ignore_errors: True
  - name: stop tomcat
    command: kill -9 {{tomcatProcess.stdout}}
    when: tomcatProcess.stdout != ''
  - name: clean old project folder
    command: rm -rf {{tomcat_dir}}/webapps/{{deploy_name}}     
  - name: deploy to tomcat
    command: chdir={{remote_temp}} unzip {{backend_war_name}} -d {{tomcat_dir}}/webapps/{{deploy_name}}
  - name: start tomcat
    command: "nohup sh {{tomcat_dir}}/bin/startup.sh &"