- name: create remote temp dir
  file: 
    path: "{{remote_temp}}"
    state: directory 

# - name: clean jenkins mount data directory
#   file: 
#     path: /glusterfs_mnt/jenkins
#     state: absent

# - name: create jenkins_home directory
#   file: 
#     path: /glusterfs_mnt/jenkins/jenkins_home
#     state: directory

- name: create ssh directory
  file: 
    path: /glusterfs_mnt/jenkins/ssh
    state: directory

- name: copy id_rsa to remote
  file: 
    src: id_rsa 
    dest: /glusterfs_mnt/jenkins/ssh/id_rsa

- name: copy id_rsa.pub to remote
  file: 
    src: id_rsa.pub 
    dest: /glusterfs_mnt/jenkins/ssh/id_rsa.pub    

- name: copy known_hosts to remote
  file: 
    src: known_hosts
    dest: /glusterfs_mnt/jenkins/ssh/known_hosts    

- name: create remote ultra-permission directory
  file: 
    path: /glusterfs_mnt/jenkins/build/ultra-permission
    state: directory

# - name: extract jenkins_home.tgz
#   unarchive:
#     src: "{{local_temp}}/jenkins_home.tgz"
#     dest: /glusterfs_mnt/jenkins/

- name: extract ultra_permission.tgz
  unarchive:
    src: "{{local_temp}}/ultra-permission/ultra-permission.tgz"
    dest: /glusterfs_mnt/jenkins/build/ultra-permission

- name: modify directory owner
  file: 
    path: /glusterfs_mnt/jenkins
    owner: 1000
    group: 1000
    recurse: yes
    state: directory

# - name: modify directory owner
#   command: chown -R 1000:1000 /glusterfs_mnt/jenkins/jenkins_home

- name: copy stack.yml to remote
  template: 
    src: jenkins_stack.yml 
    dest: "{{remote_temp}}/jenkins_stack.yml"

- name: deploy stack
  command: docker stack deploy --compose-file=jenkins_stack.yml jenkins 
  args: 
    chdir: "{{remote_temp}}"


    