- name: create remote temp dir
  file: 
    path: "{{remote_temp}}"
    state: directory 

- name: create docker mount directory
  file: 
    path: "{{docker_mnt}}"
    state: directory

- name: clean keepalived mount directory
  file: 
    path: "{{docker_mnt}}/{{keepalived_mount_data}}"
    state: absent

- name: create keepalived_name_cluster directory
  file: 
    path: "{{docker_mnt}}/{{keepalived_mount_data}}/{{keepalived_name_cluster}}"
    state: directory

- name: create keepalived conf directory
  file: 
    path: "{{docker_mnt}}/{{keepalived_mount_data}}/{{keepalived_name_cluster}}/conf"
    state: directory

- name: copy keepalived.conf.master to remote
  template: 
    src: keepalived.conf.master
    dest: "{{docker_mnt}}/{{keepalived_mount_data}}/{{keepalived_name_cluster}}/conf/keepalived.conf"  
  when: keepalived_type == "master"

- name: copy keepalived.conf.slave to remote
  template: 
    src: keepalived.conf.slave
    dest: "{{docker_mnt}}/{{keepalived_mount_data}}/{{keepalived_name_cluster}}/conf/keepalived.conf"  
  when: keepalived_type == "slave" 

- name: modprobe ip_vs
  shell: modprobe ip_vs

- name: copy compose.yml to remote
  template: 
    src: keepalived_compose.yml 
    dest: "{{remote_temp}}/keepalived_compose.yml"

- name: deploy docker-compose
  command: docker-compose -f keepalived_compose.yml -p {{env}}_{{keepalived_name_cluster}} up -d --loglevel debug
  args: 
    chdir: "{{remote_temp}}"   
    