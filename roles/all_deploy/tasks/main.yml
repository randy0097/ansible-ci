- name: create remote temp dir
  file: 
    path: "{{remote_temp}}"
    state: directory 
- name: clean old remote war
  file: 
    path: "{{remote_temp}}/{{backend_war_name}}"
    state: absent 
- name: copy war to remote
  copy: src={{build_dir_env}}/{{backend_war_name}}
        dest={{remote_temp}}/{{backend_war_name}}  
- name: get tomcat processId
  raw: ps aux|grep {{tomcat_process_keyword}}|grep -v grep|awk '{print $2}'
  register: tomcatProcess
  ignore_errors: True
- name: stop tomcat
  command: kill -9 {{tomcatProcess.stdout}}
  when: tomcatProcess.stdout != ''
- name: clean old project folder
  file: 
    path: "{{tomcat_dir}}/webapps/{{deploy_name}}"
    state: absent    
- name: create deploy folder
  file: 
    path: "{{tomcat_dir}}/webapps/{{deploy_name}}"
    state: directory     
- name: deploy to tomcat
  unarchive:
    src: "{{remote_temp}}/{{backend_war_name}}"
    dest: "{{tomcat_dir}}/webapps/{{deploy_name}}"
    remote_src: yes

# - name: replace application.properties
#   copy: src={{application_properties}} dest={{tomcat_dir}}/webapps/{{deploy_name}}/WEB-INF/classes/application.properties 
- name: set spring.profiles.active
  command: sed -i "s/spring.profiles.active=dev/spring.profiles.active={{spring_profiles_active}}/g" {{tomcat_dir}}/webapps/{{deploy_name}}/WEB-INF/classes/application.properties

- name: set swagger.enable
  command: sed -i "s/swagger.enable=false/swagger.enable={{swagger_active}}/g" {{tomcat_dir}}/webapps/{{deploy_name}}/WEB-INF/classes/application.properties

- name: start tomcat
  command: "nohup sh {{tomcat_dir}}/bin/startup.sh &"